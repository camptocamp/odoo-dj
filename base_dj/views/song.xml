
<odoo>

  <record id="dj_song_form" model="ir.ui.view">
    <field name="name">DJ song form</field>
    <field name="model">dj.song</field>
    <field name="arch" type="xml">
      <form string="Configure song">
        <field name="compilation_id" invisible="1" />
        <header>
          <button name="download_it" string="Preview File" type="object"
            class="btn-primary"  attrs="{'invisible': [('has_records', '=', False)]}"/>
        </header>
        <sheet>
          <div class="oe_button_box" name="button_box">
            <button name="toggle_active" type="object" class="oe_stat_button" icon="fa-archive">
              <field name="active" widget="boolean_button" options='{"terminology": "archive"}'/>
            </button>
          </div>
          <notebook>
            <page name="main" string="Main">
              <group name="main" col="4">
                <group colspan="2">
                  <field name="song_type" />
                  <field name="model_id" context="{'model_tech_name_only': 1}" />
                  <field name="model_name" invisible="1" />
                </group>
                <group colspan="2">
                  <field name="only_config" />
                  <field name="has_records" readonly="1" />
                  <field name="export_translations" />
                </group>
              </group>
              <group name="fields_config" attrs="{'invisible': [('has_records', '=', False)]}">
                <field name="model_fields_ids" widget="many2many_tags" context="{'model_tech_name_only': 1}"/>
                <field name="model_fields_blacklist_ids" widget="many2many_tags" context="{'model_tech_name_only': 1}"/>
              </group>
              <div name="domain_conf" attrs="{'invisible': [('has_records', '=', False)]}">
                <separator string="Domain configuration" />
                <h4>Depends on</h4>
                <p class="help-block">You can select an existing song to be used as master to collect records.
                For instance: you wan to export partners from exported `procurement.rule`.
                Solution: select the procurement rule song and the field "Partner address".
                The domain will be automatically updated with a filter on existing partner address ids.
                </p>
                <field name="depends_on_ids" >
                  <tree editable="bottom">
                    <field name="master_song_id" options="{'no_create': True}" context="{'relation_model': parent.model_name}" />
                    <field name="master_song_model" />
                    <field name="model_field_id" options="{'no_create': True}"/>
                    <field name="model_field" />
                  </tree>
                </field>
                <label string="Domain" for="domain"/>
                <field name="domain" widget="domain" options="{'model': 'model_name'}"/>
                <br />
                <label string="Python code" for="python_code" />
                <p class="help-block">You can use <strong>python_code</strong> in case <strong>domain</strong> is not enoughto filter records.<br />
                  It has <strong>env</strong> available and needs to return record set. <br />
                  For instance to get all object related to an other model you can do: <br />
                  <pre>env['model'].search([]).field_id</pre>
                </p>
                <field name="python_code" widget="ace" options="{'mode': 'python'}" placeholder="Enter Python code here."/>
              </div>
            </page>
            <page name="advanced" string="Advanced">
              <group>
                <field name="xmlid_fields"/>
                <field name="template_path"/>
                <field name="csv_path" attrs="{'invisible': [('has_records', '=', False)]}"/>
                <field name="binaries_path" attrs="{'invisible': [('has_records', '=', False)]}"/>
                <field name="model_context"/>
                <field name="exec_hook"/>
                <field name="records_order"/>
              </group>
            </page>
            <page name="modules" string="Modules" attrs="{'invisible': [('has_records', '=', False)]}">
              <group name="involved" string="Involved modules by selected fields">
                <field name="involved_modules"/>
              </group>
            </page>
            <page name="help" string="Help">
              <div class="alert alert-info" role="alert">
                  <p>A song defines a set of records to be exported.</p>
                  <h3>Usage</h3>
                  <ol>
                    <li>
                      Select the <strong>model</strong> you want to export.
                    </li>
                    <li>
                      Select the <strong>fields</strong> you want to export.<br />
                      If no fields are specified, all fields will be exported (except internal ones like `create_date`).
                    </li>
                    <li>
                      If you want all fields you might want to exclude some of them via <strong>fields blacklist</strong>.<br />
                      For instance: when you export sequence you might want to drop `next number` to start from zero.
                    </li>
                    <li>
                      Then use <strong>domain</strong> to filter records to export.<br />
                      Thanks to new widget you can filter on all model fields as you do in standard searches.<br />
                      You can even have a preview of which records will be exported by clicking on `NR record(s)` link.
                    </li>
                    <li>
                      Once you have configured and saved it, you might want to check the resulting CSV.<br />
                      If you click on <strong>Preview CSV</strong> button you'll get the CSV file
                      without having to download the full compilation.
                    </li>
                  </ol>
                </div>
            </page>
          </notebook>

        </sheet>
      </form>
    </field>
  </record>

  <record id="dj_song_tree" model="ir.ui.view">
    <field name="name">DJ song tree</field>
    <field name="model">dj.song</field>
    <field name="arch" type="xml">
      <tree>
        <field name="compilation_id"/>
        <field name="model_name" />
        <field name="model_fields_ids"/>
        <field name="domain"/>
        <field name="records_count"/>
      </tree>
    </field>
  </record>

  <record id="dj_song_search" model="ir.ui.view">
    <field name="name">DJ song search</field>
    <field name="model">dj.song</field>
    <field name="arch" type="xml">
      <search string="songs Search">
        <field name="compilation_id"/>
        <field name="model_id"/>
        <group expand="1" string="Group By">
          <filter string="Model" name="model" context="{'group_by':'model_id'}"/>
          <filter string="Compilation" name="compilation" context="{'group_by':'compilation_id'}"/>
        </group>
      </search>
    </field>
  </record>

  <record id="action_dj_songs" model="ir.actions.act_window">
    <field name="name">songs</field>
    <field name="type">ir.actions.act_window</field>
    <field name="res_model">dj.song</field>
    <field name="view_type">form</field>
    <field name="view_mode">tree,form</field>
  </record>

</odoo>
